
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: chaosschedules.scheduler.litmuschaos.io
spec:
  group: scheduler.litmuschaos.io
  names:
    kind: Chaosschedule
    listKind: ChaosscheduleList
    plural: chaosschedules
    singular: chaosschedule
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Chaosschedule is the Schema for the chaosschedules API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ChaosscheduleSpec defines the desired state of Chaosschedule
          properties:
            chaosServiceAccount:
              description: ChaosServiceAccount is the SA specified for chaos runner
                pods
              type: string
            concurrencyPolicy:
              description: TODO ConcurrencyPolicy will state whether two engines from
                the same schedule can exist simultaneously or not
              type: string
            engineTemplateSpec:
              description: EngineTemplateSpec is the spec of the engine to be created
                by this schedule
              properties:
                annotationCheck:
                  description: AnnotationCheck defines whether annotation check is
                    allowed or not. It can be true or false
                  type: string
                appinfo:
                  description: Appinfo contains deployment details of AUT
                  properties:
                    appkind:
                      description: kind of application
                      type: string
                    applabel:
                      description: Unique label of the AUT
                      type: string
                    appns:
                      description: Namespace of the AUT
                      type: string
                  type: object
                auxiliaryAppInfo:
                  description: AuxiliaryAppInfo contains details of dependent applications
                    (infra chaos)
                  type: string
                chaosServiceAccount:
                  description: ChaosServiceAccount is the SvcAcc specified for chaos
                    runner pods
                  type: string
                components:
                  description: Components contains the image, imagePullPolicy, arguments,
                    and commands of runner
                  properties:
                    runner:
                      description: Contains informations of the the runner pod
                      properties:
                        args:
                          description: Args of runner
                          items:
                            type: string
                          type: array
                        command:
                          description: Command for runner
                          items:
                            type: string
                          type: array
                        image:
                          description: Image of the runner pod
                          type: string
                        imagePullPolicy:
                          description: ImagePullPolicy for runner pod
                          type: string
                        imagePullSecrets:
                          description: ImagePullSecrets for runner pod
                          items:
                            description: LocalObjectReference contains enough information
                              to let you locate the referenced object inside the same
                              namespace.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          type: array
                        runnerannotation:
                          additionalProperties:
                            type: string
                          description: Runner Annotations that needs to be provided
                            in the pod for pod that is getting created
                          type: object
                        type:
                          description: Type of runner
                          type: string
                      type: object
                  required:
                  - runner
                  type: object
                engineState:
                  description: EngineStatus is a requirement for validation
                  type: string
                experiments:
                  description: Consists of experiments executed by the engine
                  items:
                    description: ExperimentList defines information about chaos experiments
                      defined in the chaos engine These experiments are "pulled" as
                      versioned charts from a "hub"
                    properties:
                      name:
                        description: Name of the chaos experiment
                        type: string
                      spec:
                        description: Holds properties of an experiment listed in the
                          engine
                        properties:
                          components:
                            description: It contains env, configmaps, secrets, experimentImage,
                              node selector, custom experiment annotation which can
                              be provided or overridden from the chaos engine
                            properties:
                              configMaps:
                                items:
                                  description: ConfigMap is an simpler implementation
                                    of corev1.ConfigMaps, needed for experiments
                                  properties:
                                    data:
                                      additionalProperties:
                                        type: string
                                      type: object
                                    mountPath:
                                      type: string
                                    name:
                                      type: string
                                  required:
                                  - mountPath
                                  - name
                                  type: object
                                type: array
                              env:
                                items:
                                  description: ExperimentENV varibles to override
                                    the default values in chaosexperiment
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              experimentImage:
                                type: string
                              experimentImagePullSecrets:
                                items:
                                  description: LocalObjectReference contains enough
                                    information to let you locate the referenced object
                                    inside the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                type: array
                              experimentannotation:
                                additionalProperties:
                                  type: string
                                type: object
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                type: object
                              resources:
                                description: ResourceRequirements describes the compute
                                  resource requirements.
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info:
                                      https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                type: object
                              secrets:
                                items:
                                  description: Secret is an simpler implementation
                                    of corev1.Secret
                                  properties:
                                    mountPath:
                                      type: string
                                    name:
                                      type: string
                                  required:
                                  - mountPath
                                  - name
                                  type: object
                                type: array
                              statusCheckTimeouts:
                                description: StatusCheckTimeout contains Delay and
                                  timeouts for the status checks
                                properties:
                                  delay:
                                    type: integer
                                  timeout:
                                    type: integer
                                type: object
                            type: object
                          probe:
                            description: Probe contains details of probe, which can
                              be applied on the experiments Probe can be httpProbe,
                              k8sProbe or cmdProbe
                            items:
                              description: ProbeAttributes contains details of probe,
                                which can be applied on the experiments
                              properties:
                                cmdProbe/inputs:
                                  description: inputs needed for the cmd probe
                                  properties:
                                    command:
                                      description: Command need to be executed for
                                        the probe
                                      type: string
                                    expectedResult:
                                      description: Expected output or result of the
                                        command
                                      type: string
                                    source:
                                      description: The source where we have to run
                                        the command It can be a image or inline(inside
                                        experiment itself)
                                      type: string
                                  type: object
                                data:
                                  description: Data contains the manifest/data for
                                    the resource, which need to be created it supported
                                    for create operation only
                                  type: string
                                httpProbe/inputs:
                                  description: inputs needed for the http probe
                                  properties:
                                    expectedResponseCode:
                                      description: Expected response code from the
                                        given url
                                      type: string
                                    url:
                                      description: URL which needs to curl, to check
                                        the status
                                      type: string
                                  type: object
                                k8sProbe/inputs:
                                  description: inputs needed for the k8s probe
                                  properties:
                                    command:
                                      description: Command need to be executed for
                                        the probe
                                      properties:
                                        fieldSelector:
                                          description: fieldselector to get the resource
                                            using fields selector
                                          type: string
                                        group:
                                          description: group of the resource
                                          type: string
                                        labelSelector:
                                          description: labelselector to get the resource
                                            using labels selector
                                          type: string
                                        namespace:
                                          description: namespace of the resource
                                          type: string
                                        resource:
                                          description: kind of resource
                                          type: string
                                        version:
                                          description: apiversion of the resource
                                          type: string
                                      type: object
                                    expectedResult:
                                      description: Expected output or result of the
                                        command
                                      type: string
                                  type: object
                                mode:
                                  description: mode for k8s probe it can be SOT, EOT,
                                    Edge
                                  type: string
                                name:
                                  description: Name of probe
                                  type: string
                                operation:
                                  description: Operation performed by the k8s probe
                                    it can be create, delete, present, absent
                                  type: string
                                runProperties:
                                  description: RunProperty contains timeout, retry
                                    and interval for the probe
                                  properties:
                                    interval:
                                      description: Interval contains the inverval
                                        for the probe
                                      type: integer
                                    probePollingInterval:
                                      description: ProbePollingInterval contains time
                                        interval, for which continuous probe should
                                        be sleep after each iteration
                                      type: integer
                                    probeTimeout:
                                      description: ProbeTimeout contains timeout for
                                        the probe
                                      type: integer
                                    retry:
                                      description: Retry contains the retry count
                                        for the probe
                                      type: integer
                                  type: object
                                type:
                                  description: Type of probe
                                  type: string
                              type: object
                            type: array
                          rank:
                            description: Execution priority of the chaos experiment
                            format: int32
                            type: integer
                        required:
                        - rank
                        type: object
                    required:
                    - name
                    - spec
                    type: object
                  type: array
                jobCleanUpPolicy:
                  description: JobCleanUpPolicy decides to retain or delete the jobs
                  type: string
                monitoring:
                  description: Monitor Enable Status
                  type: boolean
              required:
              - chaosServiceAccount
              - components
              - engineState
              - experiments
              type: object
            schedule:
              description: Execution schedule of batch of chaos experiments
              properties:
                now:
                  description: Now is for scheduling the engine immediately
                  type: boolean
                once:
                  description: Once is for scheduling the engine at a specific time
                  properties:
                    executionTime:
                      description: Time at which experiment is to be run
                      format: date-time
                      type: string
                  required:
                  - executionTime
                  type: object
                repeat:
                  description: Repeat is for scheduling the engine between a time
                    range
                  properties:
                    properties:
                      description: ScheduleRepeatProperties will define the properties
                        needed by the schedule to inject chaos
                      properties:
                        minChaosInterval:
                          description: Minimum Period b/w two iterations of chaos
                            experiments batch run
                          type: string
                        random:
                          description: Whether the chaos is to be scheduled at a random
                            time or not
                          type: boolean
                      type: object
                    timeRange:
                      description: TimeRange will contain time constraints for the
                        chaos to be injected
                      properties:
                        endTime:
                          description: End limit of the time range in which experiment
                            is to be run
                          format: date-time
                          type: string
                        startTime:
                          description: Start limit of the time range in which experiment
                            is to be run
                          format: date-time
                          type: string
                      type: object
                    workDays:
                      description: WorkDays specify in which hours of the day chaos
                        is to be injected
                      properties:
                        includedDays:
                          description: Days of week when experiments batch run is
                            scheduled
                          type: string
                      type: object
                    workHours:
                      description: WorkHours specify in which hours of the day chaos
                        is to be injected
                      properties:
                        includedHours:
                          description: Hours of the day when experiments batch run
                            is scheduled
                          type: string
                      type: object
                  type: object
              type: object
            scheduleState:
              description: ScheduleState determines whether to "halt", "abort" or
                "active" the schedule
              type: string
          type: object
        status:
          description: ChaosscheduleStatus defines the observed state of Chaosschedule
          properties:
            active:
              description: Active states the list of chaosengines that are currently
                running
              items:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs.  1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage.  2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular     restrictions like, "must
                  refer only to types A and B" or "UID not honored" or "name must
                  be restricted".     Those cannot be well described when embedded.  3.
                  Inconsistent validation.  Because the usages are different, the
                  validation rules are different by usage, which makes it hard for
                  users to predict what will happen.  4. The fields are both imprecise
                  and overly precise.  Kind is not a precise mapping to a URL. This
                  can produce ambiguity     during interpretation and require a REST
                  mapping.  In most cases, the dependency is on the group,resource
                  tuple     and the version of the actual struct is irrelevant.  5.
                  We cannot easily change it.  Because this type is embedded in many
                  locations, updates to this type     will affect numerous schemas.  Don''t
                  make new APIs embed an underspecified API type they do not control.
                  Instead of using this type, create a locally provided and used type
                  that is well-focused on your reference. For example, ServiceReferences
                  for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              type: array
            lastScheduleTime:
              description: LastScheduleTime states the last time an engine was created
              format: date-time
              type: string
            schedule:
              description: Schedule depicts status of the schedule whether active,
                aborted or halted
              properties:
                endTime:
                  description: EndTime defines the end timestamp of the schedule
                  format: date-time
                  type: string
                expectedNextRunTime:
                  description: ExpectedNextRunTime defines the approximate time at
                    which execution of the next instance will take place
                  format: date-time
                  type: string
                runInstances:
                  description: RunInstances defines number of already ran instances
                    at that point of time
                  type: integer
                startTime:
                  description: StartTime defines the starting timestamp of the schedule
                  format: date-time
                  type: string
                status:
                  description: Status defines the current running status of the schedule
                  type: string
              type: object
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
